{"version":3,"sources":["../../../../libs/bulma/src/lib/dropdown/dropdown.directive.ts","../../../../libs/bulma/src/lib/dropdown/dropdown-toggle.directive.ts","../../../../libs/bulma/src/lib/dropdown/dropdown-item.directive.ts","../../../../libs/bulma/src/lib/dropdown/dropdown-menu.directive.ts","../../../../libs/bulma/src/lib/bulma.module.ts"],"names":["DropdownDirective","Object","defineProperty","prototype","this","open","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","Directive","selector","host","class","[class.is-active]","DropdownToggleDirective","dropdown","el","toggle","_toggle","event","_this","setTimeout","menu","keyManager","setFocusOrigin","setFirstItemActive","i0","ɵɵdirectiveInject","ElementRef","$event","attr.aria-haspopup","(click)","Host","DropdownItemDirective","focus","nativeElement","DropdownMenuDirective","id","uniqueId","_close","ngAfterContentInit","FocusKeyManager","items","withWrap","onKeydown","keyCode","ENTER","contentQueries","dirIndex","(keydown)","ContentChildren","HostBinding","ariaControls","BulmaModule","CommonModule","declarations","imports","exports","NgModule"],"mappings":"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","sourcesContent":["import { Directive } from '@angular/core';\nimport { DropdownMenuDirective } from './dropdown-menu.directive';\nimport { DropdownToggleDirective } from './dropdown-toggle.directive';\n\n@Directive({\n  selector: '[baDropdown]',\n  host: {\n    class: 'dropdown',\n    '[class.is-active]': '_open'\n}\n})\nexport class DropdownDirective {\n  public open: boolean;\n  public menu: DropdownMenuDirective;\n  public toggle: DropdownToggleDirective;\n\n  get _open() {\n      return this.open;\n  }\n  constructor() { }\n\n\n}\n","import { Directive, ElementRef, Host } from '@angular/core';\nimport { DropdownDirective } from './dropdown.directive';\n\n@Directive({\n  selector: '[baDropdownToggle]',\n  host: {\n    'attr.aria-haspopup': 'true',\n    '(click)': '_toggle($event)'\n}\n})\nexport class DropdownToggleDirective {\n\n  constructor(@Host() private dropdown: DropdownDirective, public el: ElementRef) {\n    this.dropdown.toggle = this;\n}\n\n_toggle(event) {\n  this.dropdown.open = !this.dropdown.open;\n  if (this.dropdown.open) {\n      setTimeout(() =>\n          this.dropdown.menu.keyManager\n              .setFocusOrigin('keyboard')\n              .setFirstItemActive()\n      );\n  }\n}\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[baDropdownItem]',\n  host: {\n    'class': 'dropdown-item'\n}\n})\nexport class DropdownItemDirective {\n\n  constructor(private el: ElementRef) { }\n\n  focus() {\n    this.el.nativeElement.focus();\n}\n\n}\n","import { AfterContentInit, ContentChildren, Directive, Host, HostBinding, QueryList } from '@angular/core';\nimport { DropdownDirective } from './dropdown.directive';\nimport uniqueId from 'lodash-es/uniqueId';\nimport { DropdownItemDirective } from './dropdown-item.directive';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER } from '@angular/cdk/keycodes';\n\n@Directive({\n  selector: '[baDropdownMenu]',\n  host: {\n    class: 'dropdown-menu',\n    '(click)': '_close()',\n    '(keydown)': 'onKeydown($event)'\n}\n})\nexport class DropdownMenuDirective implements AfterContentInit {\n  @ContentChildren(DropdownItemDirective) items:\n    QueryList<DropdownItemDirective>;\n    public keyManager: FocusKeyManager<DropdownItemDirective>;\n  @HostBinding('id') id = uniqueId('dropdown-id-');\n  constructor(@Host() private dropdown: DropdownDirective) {\n    this.dropdown.menu = this;\n}\n\n@HostBinding('attr.aria-controls') get ariaControls() {\n  return this.dropdown.menu.id;\n}\n\n_close() {\n    this.dropdown.open = false;\n}\n\nngAfterContentInit() {\n  this.keyManager = new FocusKeyManager(this.items).withWrap();\n}\n\nonKeydown(event) {\n  if (event.keyCode === ENTER) {\n      this.dropdown.toggle.el.nativeElement.focus();\n  } else {\n      this.keyManager.onKeydown(event);\n  }\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownDirective } from './dropdown/dropdown.directive';\nimport { DropdownToggleDirective } from './dropdown/dropdown-toggle.directive';\nimport { DropdownMenuDirective } from './dropdown/dropdown-menu.directive';\nimport { DropdownItemDirective } from './dropdown/dropdown-item.directive';\n\nexport * from './dropdown/dropdown-item.directive';\nexport * from './dropdown/dropdown-menu.directive';\nexport * from './dropdown/dropdown-toggle.directive';\nexport * from './dropdown/dropdown.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    DropdownDirective,\n    DropdownToggleDirective,\n    DropdownMenuDirective,\n    DropdownItemDirective\n  ],\n  exports: [\n    DropdownDirective,\n    DropdownToggleDirective,\n    DropdownMenuDirective,\n    DropdownItemDirective\n  ],\n})\nexport class BulmaModule {}\n"]}